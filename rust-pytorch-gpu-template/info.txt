d apps in rust-pytorch-gpu-template:   1. stress   2. rust-bert model (for direct consumption from rust cmd line)
2nd app requires: git clone https://github.com/guillaume-be/rust-bert.git  (bert model can be directly consumed w/ cargo cmd line)




@ntrajic ➜ /workspaces/rust-data-engineering/rust-pytorch-gpu-template (main) $ tree
.
├── cuda-11.7.sh
├── env.sh
├── hello-pytorch
│   ├── Cargo.toml
│   └── src
│       └── main.rs
├── install-libtorch.sh
├── LICENSE
├── load-mnist.sh
├── lyrics.txt
├── Makefile
├── mnist-cli-gpu
│   ├── Cargo.toml
│   ├── Makefile
│   └── src
│       ├── lib.rs
│       └── main.rs
├── model.pth
├── portable-pytorch
│   ├── Cargo.toml
│   ├── export.py
│   ├── Makefile
│   ├── README.md
│   ├── requirements.txt
│   └── src
│       ├── lib.rs
│       └── main.rs
├── post-install.sh
├── pytorch-cli
├── pytorch-gpu-util
│   ├── Cargo.toml
│   └── src
│       └── main.rs
├── pytorch-mnist
│   ├── Cargo.toml
│   ├── README.md
│   └── src
│       ├── main.rs
│       ├── mnist_conv.rs
│       ├── mnist_linear.rs
│       └── mnist_nn.rs
├── quickstart_pytorch.py
├── README.md
├── requirements.txt
├── setup.sh
├── stress
│   ├── Cargo.toml
│   ├── Makefile
│   └── src
│       ├── lib.rs
│       └── main.rs
├── translate
│   ├── Cargo.toml
│   ├── lyrics.txt
│   ├── Makefile
│   └── src
│       ├── lib.rs
│       └── main.rs
└── verify-PyTorch.py

@ntrajic ➜ /workspaces/rust-data-engineering (main) $ cd rust-pytorch-gpu-template/
@ntrajic ➜ /workspaces/rust-data-engineering/rust-pytorch-gpu-template (main) $ make install
python3 -m pip install --upgrade pip \
        && pip install -r requirements.txt
Defaulting to user installation because normal site-packages is not writeable
Requirement already satisfied: pip in /home/vscode/.local/lib/python3.9/site-packages (23.3.2)
Collecting pip
  Downloading pip-24.0-py3-none-any.whl.metadata (3.6 kB)
Downloading pip-24.0-py3-none-any.whl (2.1 MB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 2.1/2.1 MB 26.1 MB/s eta 0:00:00
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 23.3.2
    Uninstalling pip-23.3.2:
      Successfully uninstalled pip-23.3.2
Successfully installed pip-24.0
Defaulting to user installation because normal site-packages is not writeable
Collecting torch==1.13.1 (from -r requirements.txt (line 1))
  Downloading torch-1.13.1-cp39-cp39-manylinux1_x86_64.whl (887.4 MB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 887.4/887.4 MB 1.8 MB/s eta 0:00:00
Collecting torchaudio==0.13.1 (from -r requirements.txt (line 2))
  Downloading torchaudio-0.13.1-cp39-cp39-manylinux1_x86_64.whl (4.2 MB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 4.2/4.2 MB 48.0 MB/s eta 0:00:00
Collecting torchvision==0.14.1 (from -r requirements.txt (line 3))
  Downloading torchvision-0.14.1-cp39-cp39-manylinux1_x86_64.whl (24.2 MB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 24.2/24.2 MB 41.0 MB/s eta 0:00:00
Requirement already satisfied: typing-extensions in /home/vscode/.local/lib/python3.9/site-packages (from torch==1.13.1->-r requirements.txt (line 1)) (4.9.0)
Collecting nvidia-cuda-runtime-cu11==11.7.99 (from torch==1.13.1->-r requirements.txt (line 1))
  Downloading nvidia_cuda_runtime_cu11-11.7.99-py3-none-manylinux1_x86_64.whl (849 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 849.3/849.3 kB 18.8 MB/s eta 0:00:00
Collecting nvidia-cudnn-cu11==8.5.0.96 (from torch==1.13.1->-r requirements.txt (line 1))
  Downloading nvidia_cudnn_cu11-8.5.0.96-2-py3-none-manylinux1_x86_64.whl (557.1 MB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 557.1/557.1 MB 3.3 MB/s eta 0:00:00
Collecting nvidia-cublas-cu11==11.10.3.66 (from torch==1.13.1->-r requirements.txt (line 1))
  Downloading nvidia_cublas_cu11-11.10.3.66-py3-none-manylinux1_x86_64.whl (317.1 MB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 317.1/317.1 MB 5.0 MB/s eta 0:00:00
Collecting nvidia-cuda-nvrtc-cu11==11.7.99 (from torch==1.13.1->-r requirements.txt (line 1))
  Downloading nvidia_cuda_nvrtc_cu11-11.7.99-2-py3-none-manylinux1_x86_64.whl (21.0 MB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 21.0/21.0 MB 40.2 MB/s eta 0:00:00
Requirement already satisfied: numpy in /home/vscode/.local/lib/python3.9/site-packages (from torchvision==0.14.1->-r requirements.txt (line 3)) (1.26.3)
Requirement already satisfied: requests in /home/vscode/.local/lib/python3.9/site-packages (from torchvision==0.14.1->-r requirements.txt (line 3)) (2.31.0)
Requirement already satisfied: pillow!=8.3.*,>=5.3.0 in /home/vscode/.local/lib/python3.9/site-packages (from torchvision==0.14.1->-r requirements.txt (line 3)) (10.2.0)
Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nvidia-cublas-cu11==11.10.3.66->torch==1.13.1->-r requirements.txt (line 1)) (52.0.0)
Requirement already satisfied: wheel in /usr/lib/python3/dist-packages (from nvidia-cublas-cu11==11.10.3.66->torch==1.13.1->-r requirements.txt (line 1)) (0.34.2)
Requirement already satisfied: charset-normalizer<4,>=2 in /home/vscode/.local/lib/python3.9/site-packages (from requests->torchvision==0.14.1->-r requirements.txt (line 3)) (3.3.2)
Requirement already satisfied: idna<4,>=2.5 in /home/vscode/.local/lib/python3.9/site-packages (from requests->torchvision==0.14.1->-r requirements.txt (line 3)) (3.6)
Requirement already satisfied: urllib3<3,>=1.21.1 in /home/vscode/.local/lib/python3.9/site-packages (from requests->torchvision==0.14.1->-r requirements.txt (line 3)) (2.1.0)
Requirement already satisfied: certifi>=2017.4.17 in /home/vscode/.local/lib/python3.9/site-packages (from requests->torchvision==0.14.1->-r requirements.txt (line 3)) (2023.11.17)
Installing collected packages: nvidia-cuda-runtime-cu11, nvidia-cuda-nvrtc-cu11, nvidia-cublas-cu11, nvidia-cudnn-cu11, torch, torchvision, torchaudio


@ntrajic ➜ /workspaces/rust-data-engineering/rust-pytorch-gpu-template/stress (main) $ cargo update -p clap@4.5.0 --precise 4.0.32
    Updating crates.io index
    Removing anstream v0.6.11
    Removing anstyle v1.0.6
    Removing anstyle-parse v0.2.3
    Removing anstyle-query v1.0.2
    Removing anstyle-wincon v3.0.2
      Adding bitflags v1.3.2
      Adding bitflags v2.4.2
 Downgrading clap v4.5.0 -> v4.0.32
    Removing clap_builder v4.5.0
 Downgrading clap_derive v4.5.0 -> v4.0.21
 Downgrading clap_lex v0.7.0 -> v0.3.3
    Removing colorchoice v1.0.0
      Adding errno v0.3.8
      Adding hermit-abi v0.3.5
      Adding is-terminal v0.4.10
      Adding linux-raw-sys v0.4.13
      Adding os_str_bytes v6.6.1
      Adding proc-macro-error v1.0.4
      Adding proc-macro-error-attr v1.0.4
      Adding rustix v0.38.31
 Downgrading strsim v0.11.0 -> v0.10.0
      Adding syn v1.0.109
      Adding termcolor v1.4.1
    Removing utf8parse v0.2.1
      Adding winapi v0.3.9
      Adding winapi-i686-pc-windows-gnu v0.4.0
      Adding winapi-util v0.1.6
      Adding winapi-x86_64-pc-windows-gnu v0.4.0
@ntrajic ➜ /workspaces/rust-data-engineering/rust-pytorch-gpu-template/stress (main) $ make all
cargo fmt --quiet
cargo clippy --quiet
cargo test --quiet

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

cargo run 
   Compiling stress v0.1.0 (/workspaces/rust-data-engineering/rust-pytorch-gpu-template/stress)
    Finished dev [unoptimized + debuginfo] target(s) in 1.94s
     Running `target/debug/stress`


@ntrajic ➜ /workspaces/rust-data-engineering/rust-pytorch-gpu-template/stress (main) $ cargo run -- --help
    Finished dev [unoptimized + debuginfo] target(s) in 0.09s
     Running `target/debug/stress --help`
A Stress Test for PyTorch CPU and GPU.  There are three subcommands: cpu, gpu, and tgpu. The tgpu subcommand uses Rayon to send the load to the GPU.

Usage: stress [COMMAND]

Commands:
  cpu   
  gpu   
  tgpu  
  help  Print this message or the help of the given subcommand(s)

Options:
  -h, --help     Print help information
  -V, --version  Print version information


in separate terminal watch the load with **htop**:


  1)  cargo run -- cpu <enter>

  2)  cargo run -- gpu <enter>

  3)  cargo run -- tgpu <enter>


   1)  cargo run -- cpu <enter>@ntrajic ➜ /workspaces/rust-data-engineering/rust-pytorch-gpu-template/rust-bert (main) $ cargo run --example sentence_embeddings
error: package `clap_builder v4.5.0` cannot be built because it requires rustc 1.74 or newer, while the currently active rustc version is 1.70.0
Either upgrade to rustc 1.74 or newer, or use
cargo update -p clap_builder@4.5.0 --precise ver
where `ver` is the latest version of `clap_builder` supporting rustc 1.70.0


SOLUTION:
@ntrajic ➜ /workspaces/rust-data-engineering/rust-pytorch-gpu-template/rust-bert (main) $ cargo update -p clap@4.5.0 --precise 4.0.32
    Updating crates.io index
    Removing anstyle v1.0.6
 Downgrading clap v4.5.0 -> v4.0.32
    Removing clap_builder v4.5.0
 Downgrading clap_lex v0.7.0 -> v0.3.3
      Adding os_str_bytes v6.6.1


  it is necessary to set up ENV for LIBTORCH !!!

export LIBTORCH=/path/to/libtorch
export LD_LIBRARY_PATH=${LIBTORCH}/lib:$LD_LIBRARY_PATH



  @ntrajic ➜ /workspaces/rust-data-engineering/rust-pytorch-gpu-template/rust-bert (main) $ cargo run --example sentence_embeddings
   Compiling libc v0.2.153
   Compiling cfg-if v1.0.0
   Compiling proc-macro2 v1.0.78
   Compiling unicode-ident v1.0.12
   Compiling version_check v0.9.4
   Compiling pkg-config v0.3.29
   Compiling autocfg v1.1.0
   Compiling typenum v1.17.0
   Compiling generic-array v0.14.7
   Compiling once_cell v1.19.0
   Compiling itoa v1.0.10
   Compiling serde v1.0.196
   Compiling quote v1.0.35
   Compiling syn v2.0.48
   Compiling subtle v2.5.0
   Compiling memchr v2.7.1
   Compiling jobserver v0.1.28
   Compiling cc v1.0.83
   Compiling getrandom v0.2.12
   Compiling crypto-common v0.1.6
   Compiling block-buffer v0.10.4
   Compiling ryu v1.0.16
   Compiling digest v0.10.7
   Compiling rand_core v0.6.4
   Compiling cpufeatures v0.2.12
   Compiling bitflags v2.4.2
   Compiling pin-project-lite v0.2.13
   Compiling serde_json v1.0.113
   Compiling crc32fast v1.3.2
   Compiling zstd-sys v2.0.9+zstd.1.5.5
   Compiling bzip2-sys v0.1.11+1.0.8
   Compiling zstd-safe v5.0.2+zstd.1.5.2
   Compiling inout v0.1.3
   Compiling powerfmt v0.2.0
   Compiling base64ct v1.6.0
   Compiling adler v1.0.2
   Compiling httparse v1.8.0
   Compiling log v0.4.20
   Compiling miniz_oxide v0.7.2
   Compiling password-hash v0.4.2
   Compiling deranged v0.3.11
   Compiling cipher v0.4.4
   Compiling sha2 v0.10.8
   Compiling hmac v0.12.1
   Compiling time-core v0.1.2
   Compiling vcpkg v0.2.15
   Compiling tinyvec_macros v0.1.1
   Compiling num-conv v0.1.0
   Compiling time v0.3.34
   Compiling tinyvec v1.6.0
   Compiling serde_derive v1.0.196
   Compiling openssl-sys v0.9.99
   Compiling pbkdf2 v0.11.0
   Compiling flate2 v1.0.28
   Compiling aes v0.8.3
   Compiling sha1 v0.10.6
   Compiling num-traits v0.2.18
   Compiling ahash v0.8.7
   Compiling thiserror v1.0.56
   Compiling constant_time_eq v0.1.5
   Compiling bytes v1.5.0
   Compiling byteorder v1.5.0
   Compiling unicode-normalization v0.1.22
   Compiling tracing-attributes v0.1.27
   Compiling thiserror-impl v1.0.56
   Compiling tracing-core v0.1.32
   Compiling zerocopy v0.7.32
   Compiling percent-encoding v2.3.1
   Compiling rustix v0.38.31
   Compiling tracing v0.1.40
   Compiling form_urlencoded v1.2.1
   Compiling tokio-macros v2.2.0
   Compiling ring v0.17.7
   Compiling mio v0.8.10
   Compiling num_cpus v1.16.0
   Compiling socket2 v0.5.5
   Compiling slab v0.4.9
   Compiling futures-core v0.3.30
   Compiling crossbeam-utils v0.8.19
   Compiling allocator-api2 v0.2.16
   Compiling lazy_static v1.4.0
   Compiling unicode-bidi v0.3.15
   Compiling linux-raw-sys v0.4.13
   Compiling hashbrown v0.14.3
   Compiling idna v0.5.0
   Compiling tokio v1.36.0
   Compiling aho-corasick v1.1.2
   Compiling foreign-types-shared v0.1.1
   Compiling openssl v0.10.63
   Compiling regex-syntax v0.8.2
   Compiling fastrand v2.0.1
   Compiling fnv v1.0.7
   Compiling either v1.9.0
   Compiling anyhow v1.0.79
   Compiling base64 v0.21.7
   Compiling regex-automata v0.4.5
   Compiling http v0.2.11
   Compiling foreign-types v0.3.2
   Compiling url v2.5.0
   Compiling openssl-macros v0.1.1
   Compiling futures-sink v0.3.30
   Compiling native-tls v0.2.11
   Compiling pin-utils v0.1.0
   Compiling spin v0.9.8
   Compiling rustls-pki-types v1.2.0
   Compiling equivalent v1.0.1
   Compiling futures-task v0.3.30
   Compiling untrusted v0.9.0
   Compiling futures-io v0.3.30
   Compiling indexmap v2.2.2
   Compiling futures-util v0.3.30
   Compiling tokio-util v0.7.10
   Compiling crossbeam-epoch v0.9.18
   Compiling regex v1.10.3
   Compiling xattr v1.3.1
   Compiling filetime v0.2.23
   Compiling matrixmultiply v0.3.8
   Compiling half v2.3.1
   Compiling openssl-probe v0.1.5
   Compiling rayon-core v1.12.1
   Compiling try-lock v0.2.5
   Compiling rustls v0.22.2
   Compiling want v0.3.1
   Compiling tar v0.4.40
   Compiling h2 v0.3.24
   Compiling crossbeam-deque v0.8.5
   Compiling http-body v0.4.6
   Compiling futures-channel v0.3.30
   Compiling hoot v0.1.3
   Compiling ppv-lite86 v0.2.17
   Compiling httpdate v1.0.3
   Compiling tower-service v0.3.2
   Compiling zeroize v1.7.0
   Compiling rawpointer v0.2.1
   Compiling rand_chacha v0.3.1
   Compiling hootbin v0.1.1
   Compiling hyper v0.14.28
   Compiling tokio-native-tls v0.3.1
   Compiling webpki-roots v0.26.1
   Compiling num-integer v0.1.46
   Compiling num-complex v0.4.5
   Compiling protobuf v2.28.0
   Compiling ndarray v0.15.6
   Compiling rayon v1.8.1
   Compiling rand v0.8.5
   Compiling hyper-tls v0.5.0
   Compiling rustls-pemfile v1.0.4
   Compiling serde_urlencoded v0.7.1
   Compiling console v0.15.8
   Compiling csv-core v0.1.11
   Compiling encoding_rs v0.8.33
   Compiling tch v0.14.0
   Compiling smallvec v1.13.1
   Compiling ipnet v2.9.0
   Compiling sync_wrapper v0.1.2
   Compiling number_prefix v0.4.0
   Compiling plotters-backend v0.3.5
   Compiling option-ext v0.2.0
   Compiling os_str_bytes v6.6.1
   Compiling regex-syntax v0.6.29
   Compiling mime v0.3.17
   Compiling ciborium-io v0.2.2
   Compiling rust_tokenizers v8.1.1
   Compiling ciborium-ll v0.2.2
   Compiling reqwest v0.11.24
   Compiling clap_lex v0.3.3
   Compiling plotters-svg v0.3.5
   Compiling dirs-sys v0.4.1
   Compiling regex-automata v0.1.10
   Compiling indicatif v0.16.2
   Compiling unicode-normalization-alignments v0.1.12
   Compiling csv v1.3.0
   Compiling itertools v0.11.0
   Compiling itertools v0.10.5
   Compiling tempfile v3.10.0
   Compiling safetensors v0.3.3
   Compiling fs2 v0.4.3
   Compiling bitflags v1.3.2
   Compiling glob v0.3.1
   Compiling same-file v1.0.6
   Compiling rust-bert v0.22.0 (/workspaces/rust-data-engineering/rust-pytorch-gpu-template/rust-bert)
   Compiling cast v0.3.0
   Compiling criterion-plot v0.5.0
   Compiling walkdir v2.4.0
   Compiling clap v4.0.32
   Compiling matchers v0.1.0
   Compiling dirs v5.0.1
   Compiling plotters v0.3.5
   Compiling ciborium v0.2.2
   Compiling tinytemplate v1.2.1
   Compiling sharded-slab v0.1.7
   Compiling ordered-float v3.9.2
   Compiling uuid v1.7.0
   Compiling is-terminal v0.4.12
   Compiling thread_local v1.1.7
   Compiling libloading v0.7.4
   Compiling oorandom v11.1.3
   Compiling anes v0.1.6
   Compiling tracing-subscriber v0.3.18
   Compiling criterion v0.5.1
   Compiling itertools v0.12.1
   Compiling bzip2 v0.4.4
   Compiling rustls-webpki v0.102.2
   Compiling zstd v0.11.2+zstd.1.5.2
   Compiling zip v0.6.6
   Compiling cached-path v0.6.1
   Compiling torch-sys v0.14.0
error: failed to run custom build command for `torch-sys v0.14.0`

Caused by:
  process didn't exit successfully: `/workspaces/rust-data-engineering/rust-pytorch-gpu-template/rust-bert/target/debug/build/torch-sys-14c24edfae966be8/build-script-build` (exit status: 1)
  --- stdout
  cargo:rerun-if-env-changed=LIBTORCH_USE_PYTORCH
  cargo:rerun-if-env-changed=LIBTORCH

  --- stderr
  Error: 
  Cannot find a libtorch install, you can either:
  - Install libtorch manually and set the LIBTORCH environment variable to appropriate path.
  - Use a system wide install in /usr/lib/libtorch.so.
  - Use a Python environment with PyTorch installed by setting LIBTORCH_USE_PYTORCH=1

  See the readme for more details:
  https://github.com/LaurentMazare/tch-rs/blob/main/README.md

warning: build failed, waiting for other jobs to finish..
